   Compiling mylib v0.1.0 (/home/vuos/code/p1/s1-fw/t1/mylib)
error[E0425]: cannot find value `row` in this scope
  --> src/lib.rs:85:30
   |
85 |             .filter(|(i, _)| row.get::<_, i32>(5).unwrap_or(0) > 0)
   |                              ^^^ not found in this scope

error[E0599]: the method `with_state` exists for struct `Router<AppState>`, but its trait bounds were not satisfied
  --> src/lib.rs:58:67
   |
29 | struct AppState {
   | --------------- doesn't satisfy `AppState: Send`
...
58 |         app = app.nest(&format!("/{}", schema.name), table_router.with_state(state));
   |                                                                   ^^^^^^^^^^ method cannot be called on `Router<AppState>` due to unsatisfied trait bounds
   |
   = note: the following trait bounds were not satisfied:
           `RefCell<rusqlite::inner_connection::InnerConnection>: Sync`
           which is required by `AppState: Send`
           `RefCell<hashlink::lru_cache::LruCache<Arc<str>, rusqlite::raw_statement::RawStatement>>: Sync`
           which is required by `AppState: Send`

warning: unused variable: `v`
   --> src/lib.rs:139:24
    |
139 |         .map(|(pk, (_, v))| format!("{} = ?", pk))
    |                        ^ help: if this is intentional, prefix it with an underscore: `_v`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `v`
   --> src/lib.rs:195:24
    |
195 |         .map(|(pk, (_, v))| format!("{} = ?", pk))
    |                        ^ help: if this is intentional, prefix it with an underscore: `_v`

warning: unused variable: `v`
   --> src/lib.rs:217:24
    |
217 |         .map(|(pk, (_, v))| format!("{} = ?", pk))
    |                        ^ help: if this is intentional, prefix it with an underscore: `_v`

error[E0277]: the trait bound `fn(State<AppState>, Path<String>) -> ... {list_rows}: Handler<_, _>` is not satisfied
   --> src/lib.rs:114:25
    |
114 |         .route("/", get(list_rows))
    |                     --- ^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(State<AppState>, Path<String>) -> ... {list_rows}`
    |                     |
    |                     required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
note: required by a bound in `axum::routing::get`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:439:1
    |
439 | top_level_handler_fn!(get, GET);
    | ^^^^^^^^^^^^^^^^^^^^^^---^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `get`
    = note: the full name for the type has been written to '/home/vuos/code/p1/s1-fw/t1/mylib/target/debug/deps/mylib-8f6adb00d6d19027.long-type-5748422708745202316.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(State<AppState>, Path<Vec<...>>) -> ... {get_row}: Handler<_, _>` is not satisfied
   --> src/lib.rs:115:30
    |
115 |         .route(&pk_path, get(get_row))
    |                          --- ^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(State<AppState>, Path<Vec<(String, String)>>) -> ... {get_row}`
    |                          |
    |                          required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
note: required by a bound in `axum::routing::get`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:439:1
    |
439 | top_level_handler_fn!(get, GET);
    | ^^^^^^^^^^^^^^^^^^^^^^---^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `get`
    = note: the full name for the type has been written to '/home/vuos/code/p1/s1-fw/t1/mylib/target/debug/deps/mylib-8f6adb00d6d19027.long-type-2303766632300774017.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(State<AppState>, Path<...>, ...) -> ... {create_row}: Handler<_, _>` is not satisfied
   --> src/lib.rs:116:26
    |
116 |         .route("/", post(create_row))
    |                     ---- ^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(State<AppState>, Path<String>, Json<Value>) -> ... {create_row}`
    |                     |
    |                     required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
note: required by a bound in `post`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:443:1
    |
443 | top_level_handler_fn!(post, POST);
    | ^^^^^^^^^^^^^^^^^^^^^^----^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `post`
    = note: the full name for the type has been written to '/home/vuos/code/p1/s1-fw/t1/mylib/target/debug/deps/mylib-8f6adb00d6d19027.long-type-9429108422715335993.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(State<AppState>, Path<...>, ...) -> ... {update_row}: Handler<_, _>` is not satisfied
   --> src/lib.rs:117:30
    |
117 |         .route(&pk_path, put(update_row))
    |                          --- ^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(State<AppState>, Path<Vec<(String, ...)>>, ...) -> ... {update_row}`
    |                          |
    |                          required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
note: required by a bound in `put`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:444:1
    |
444 | top_level_handler_fn!(put, PUT);
    | ^^^^^^^^^^^^^^^^^^^^^^---^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `put`
    = note: the full name for the type has been written to '/home/vuos/code/p1/s1-fw/t1/mylib/target/debug/deps/mylib-8f6adb00d6d19027.long-type-5564210201918514022.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(State<AppState>, Path<Vec<...>>) -> ... {delete_row}: Handler<_, _>` is not satisfied
   --> src/lib.rs:118:33
    |
118 |         .route(&pk_path, delete(delete_row))
    |                          ------ ^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(State<AppState>, Path<Vec<(String, String)>>) -> ... {delete_row}`
    |                          |
    |                          required by a bound introduced by this call
    |
    = note: Consider using `#[axum::debug_handler]` to improve the error message
    = help: the following other types implement trait `Handler<T, S>`:
              `Layered<L, H, T, S>` implements `Handler<T, S>`
              `MethodRouter<S>` implements `Handler<(), S>`
note: required by a bound in `delete`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:438:1
    |
438 | top_level_handler_fn!(delete, DELETE);
    | ^^^^^^^^^^^^^^^^^^^^^^------^^^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `delete`
    = note: the full name for the type has been written to '/home/vuos/code/p1/s1-fw/t1/mylib/target/debug/deps/mylib-8f6adb00d6d19027.long-type-8755158617828503947.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `RefCell<rusqlite::inner_connection::InnerConnection>` cannot be shared between threads safely
   --> src/lib.rs:113:5
    |
113 |     Router::new()
    |     ^^^^^^^^^^^^^ `RefCell<rusqlite::inner_connection::InnerConnection>` cannot be shared between threads safely
    |
    = help: within `Connection`, the trait `Sync` is not implemented for `RefCell<rusqlite::inner_connection::InnerConnection>`
    = note: if you want to do aliasing and mutation between multiple threads, use `std::sync::RwLock` instead
note: required because it appears within the type `Connection`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.31.0/src/lib.rs:377:12
    |
377 | pub struct Connection {
    |            ^^^^^^^^^^
    = note: required for `Arc<Connection>` to implement `Send`
note: required because it appears within the type `AppState`
   --> src/lib.rs:29:8
    |
29  | struct AppState {
    |        ^^^^^^^^
note: required by a bound in `Router::<S>::new`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:133:16
    |
133 |     S: Clone + Send + Sync + 'static,
    |                ^^^^ required by this bound in `Router::<S>::new`
...
139 |     pub fn new() -> Self {
    |            --- required by a bound in this associated function

error[E0277]: `RefCell<hashlink::lru_cache::LruCache<Arc<str>, rusqlite::raw_statement::RawStatement>>` cannot be shared between threads safely
   --> src/lib.rs:113:5
    |
113 |     Router::new()
    |     ^^^^^^^^^^^^^ `RefCell<hashlink::lru_cache::LruCache<Arc<str>, rusqlite::raw_statement::RawStatement>>` cannot be shared between threads safely
    |
    = help: within `Connection`, the trait `Sync` is not implemented for `RefCell<hashlink::lru_cache::LruCache<Arc<str>, rusqlite::raw_statement::RawStatement>>`
    = note: if you want to do aliasing and mutation between multiple threads, use `std::sync::RwLock` instead
note: required because it appears within the type `rusqlite::cache::StatementCache`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.31.0/src/cache.rs:61:12
    |
61  | pub struct StatementCache(RefCell<LruCache<Arc<str>, RawStatement>>);
    |            ^^^^^^^^^^^^^^
note: required because it appears within the type `Connection`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.31.0/src/lib.rs:377:12
    |
377 | pub struct Connection {
    |            ^^^^^^^^^^
    = note: required for `Arc<Connection>` to implement `Send`
note: required because it appears within the type `AppState`
   --> src/lib.rs:29:8
    |
29  | struct AppState {
    |        ^^^^^^^^
note: required by a bound in `Router::<S>::new`
   --> /home/vuos/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:133:16
    |
133 |     S: Clone + Send + Sync + 'static,
    |                ^^^^ required by this bound in `Router::<S>::new`
...
139 |     pub fn new() -> Self {
    |            --- required by a bound in this associated function

Some errors have detailed explanations: E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `mylib` (lib) generated 3 warnings
error: could not compile `mylib` (lib) due to 9 previous errors; 3 warnings emitted
